{"version":3,"sources":["user.svg","AddProduct.js","BoughtProductModal.js","Dashboard.js","SellerCreatedModal.js","Seller.js","SingleSellerProfileModal.js","Sellers.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ipfs","require","ipfsClient","host","port","AddProduct","props","captureFile","event","preventDefault","file","upload_image","files","reader","window","FileReader","readAsArrayBuffer","onloadend","console","log","state","buffer","Buffer","result","setState","loading","handleSubmit","bind","account","this","add","error","forEach","a","hash","productDapp","methods","createProduct","product_name","value","product_description","web3","utils","toWei","product_price","toString","send","from","once","receipt","stopPropagation","className","onSubmit","htmlFor","type","id","placeholder","ref","input","required","rows","onChange","Component","BoughtProductModal","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","Button","onClick","onHide","Dashboard","single_result","addModalShow","data-feather","products","map","product","key","src","alt","width","height","seller","fromWei","target","buyProduct","persist","show","SellerCreatedModal","Seller","first_name","createSellerProfile","last_name","name_of_business","email_address","description_of_business","business_address","SellerDetailModal","get_detail_farmer","User","style","color","backgroundColor","borderColor","Sellers","uint_id","getSingleSeller","call","get_single_farmer","sellers","seller_address","data-target","parseInt","getSingleFarmer","App","message","loadWeb3","loadBlockchainData","addEventListener","ethereum","Web3","enable","eth","getAccounts","accounts","currentProvider","alert","net","getId","networkId","networkData","ProductDapp","networks","Contract","abi","address","product_count","productCount","seller_count","sellerCount","dapp_name","productDappName","j","i","href","aria-label","to","role","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83ec92b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.8547ceae.svg\";","import React, { Component } from 'react';\n\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({host:'ipfs.infura.io',port:5001,'protocol':'https'})\n\n\n// captureFile =(event) => {\n//     event.preventDefault()\n//     // console.log(\"file captured....\")\n//     // console.log(event.target.files[0])\n//     const file = event.target.files[0]\n//     const reader = new window.FileReader()\n//     reader.readAsArrayBuffer(file)\n//     reader.onloadend = () =>{\n//       // console.log(\"buffer\", this.state.buffer)\n//       // console.log(\"buffer\", Buffer(reader.result))\n//       this.setState({\n//         buffer:Buffer(reader.result)\n//       })\n//     }\n//   }\n//   onSubmit = (event) => {\n//     event.preventDefault()\n//     console.log(\"Submitted....\")\n//     ipfs.add(this.state.buffer,(error, result)=>{\n//       // do stuff here\n//       console.log(\"Ipfs Result\",result)\n//       if(error){\n//         console.error(\"Error>>>\", error)\n//         return\n//       }\n//     })\n//   }\n  \n\nexport default class AddProduct extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            loading:this.props.loading,\n            buffer:null\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        console.log(this.props.account)\n    }\n        //form handling\n        captureFile =(event) => {\n             event.preventDefault()\n            const file = this.upload_image.files[0]\n            const reader = new window.FileReader()\n            reader.readAsArrayBuffer(file)\n            reader.onloadend = () =>{\n                console.log(\"buffer\", this.state.buffer)\n                console.log(\"buffer\", Buffer(reader.result))\n                this.setState({\n                    buffer:Buffer(reader.result)\n                })\n            }\n        }\n        async  handleSubmit(event){\n            console.log(\"Form Submitted!!!\")\n            // console.log(typeof this.first_name)\n            try {\n                console.log(\"Events\")\n                this.setState({loading:true})\n                ipfs.add(this.state.buffer,(error, result)=>{\n                    // do stuff here\n                    console.log(\"Ipfs Result\",result)\n                    // return result['0'].hash\n                    result.forEach(async (file) => {\n                        console.log(\"successfully stored\", file.hash)\n                        this.props.productDapp.methods.createProduct(\n                            this.product_name.value,\n                            this.product_description.value,\n                            window.web3.utils.toWei(this.product_price.value.toString(),'Ether'),\n                           file.hash\n                        )\n                        .send({from:this.props.account})\n                        .once('receipt', (receipt) => {\n                            this.setState({\n                                loading:false\n                            })\n                            console.log(receipt);\n                        })\n                    });\n                    if(error){\n                        console.error(\"Error>>>\", error)\n                        return\n                    }\n                })\n                \n            } catch (error){\n                console.log(error)\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    render() {\n        return (\n\n            <div className=\"mt-5\">\n                <h3>\n                    Add Product\n                </h3>\n                <form\n                     onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">Product Name</label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"product_name\" \n                            placeholder=\"Product Name\"\n                            ref={(input) => this.product_name = input}\n                            required\n                        />\n                    </div>\n                      \n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlTextarea1\">Product Description</label>\n                        <textarea \n                                className=\"form-control\" \n                                id=\"product_description\" \n                                rows=\"3\"\n                                ref={(input)=> this.product_description =input}\n                                required\n                                ></textarea>\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">Product Price</label>\n                        <input \n                            type=\"number\" \n                            className=\"form-control\" \n                            id=\"product_price\" \n                            placeholder=\"Product Price\"\n                            ref = {(input) => this.product_price = input}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                    <div className=\"custom-file\">\n                        <input \n                            type=\"file\" \n                            className=\"custom-file-input\" \n                            id=\"uploadImage\"\n                            ref = {(input)=> this.upload_image = input}\n                            onChange={this.captureFile}\n                            required\n                        />\n                        <label className=\"custom-file-label\" htmlFor=\"customFile\">Upload Image</label>\n                    </div>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\n                    </form>\n            </div>\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Modal,Button} from 'react-bootstrap';\n\n\nexport default class BoughtProductModal extends Component {\n    constructor(props){\n        super(props)\n    }\n    render() {\n        return (\n            \n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            <h3>Message</h3>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n          <center>\n          <h4> THANKS FOR USING OUR PLATFORM</h4>\n          \n        </center>\n      </Modal.Body>\n      \n      <Modal.Footer>\n        <Button onClick={this.props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n        );\n    }\n}","import React, { Component } from 'react';\nimport \"./dashboard_css.css\"\nimport BoughtProductModal from \"./BoughtProductModal\"\n\nexport default class Dashboard extends Component {\n  constructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n            single_result:'',\n            addModalShow: false,\n            loading:false\n            \n\t\t}\t\n  }\n    render() {\n      let addModalClose =() => this.setState({addModalShow:false})\n        return (\n            <div>\n                <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <h1 className=\"h2\">Dashboard</h1>\n        <div className=\"btn-toolbar mb-2 mb-md-0\">\n          <div className=\"btn-group mr-2\">\n            <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Share</button>\n            <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Export</button>\n          </div>\n          <button type=\"button\" className=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\n            <span data-feather=\"calendar\"></span>\n            This week\n          </button>\n        </div>\n      </div>\n\n      <h2>Section title</h2>\n      <div className=\"table-responsive\">\n        <table className=\"table table-striped table-sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Product Image</th>\n              <th>Product Title</th>\n              <th>Farmer Wallet Address</th>\n              <th>Price</th>\n              <th>Buy</th>\n              <th>Edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.products.map((product, key) => {\n              return(\n                <tr key={key}>\n            <td>{product.id}</td>\n              <td>\n                <img \n                  src={`https://ipfs.io/ipfs/${product.upload_image}/`}  \n                  alt={product.product_name}\n                  width=\"100\"\n                  height=\"100\" \n                  />\n              </td>\n              <td>{product.product_name}</td>\n            <td>{product.seller}</td>\n              <td>{window.web3.utils.fromWei(product.product_price.toString(),'Ether')} ETH</td>\n                <td>\n                  <button \n                    type=\"button\" \n                    id={product.id}\n                    value={product.product_price}\n                    className=\"btn btn-primary btn-sm\"\n                    onClick = {(event) => {\n                      const id = event.target.id;\n                      this.props.productDapp.methods.buyProduct(id).send({from: this.props.account,value:event.target.value})\n                        .once('receipt', (receipt)=> {\n                          this.setState({ loading: false})\n                        })\n                      this.setState({addModalShow:true})\n                      event.persist();\n                    }}\n                    >Buy Product</button>\n                </td>\n                <td>\n                <button \n                  type=\"button\" \n                  className=\"btn btn-success btn-sm\">Edit Product</button>\n                </td>\n              </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <BoughtProductModal \n\t\t\t\tshow={this.state.addModalShow}\n\t\t\t\tonHide={addModalClose}\n            /> \n            </div> \n        );\n    }\n}","import React, { Component } from 'react';\nimport {Modal,Button} from 'react-bootstrap';\n\n\nexport default class SellerCreatedModal extends Component {\n    render() {\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            <h3>Message</h3>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n          <center>\n          <h4> THANKS FOR USING OUR PLATFORM</h4>\n          \n        </center>\n      </Modal.Body>\n      \n      <Modal.Footer>\n        <Button onClick={this.props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n        );\n    }\n}","import React, { Component } from 'react';\nimport SellerCreatedModal from \"./SellerCreatedModal\"\n\nexport default class Seller extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            loading:this.props.loading,\n            addModalShow: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        console.log(this.props.account)\n    }\n    //form handling\n    handleSubmit(event){\n        console.log(\"Form Submitted!!!\")\n        console.log(typeof this.first_name)\n        try {\n    \n        this.setState({loading:true})\n        this.props.productDapp.methods.createSellerProfile(\n            this.first_name.value,\n            this.last_name.value,\n            this.name_of_business.value,\n            this.email_address.value,\n            this.description_of_business.value,\n            this.business_address.value\n        )\n        .send({from:this.props.account})\n        .once('receipt',(receipt) => {\n            this.setState({loading:false})\n            console.log(receipt)\n        })\n        this.first_name.value = \"\"\n        this.last_name.value =\"\"\n        this.name_of_business.value=\"\"\n        this.email_address.value = \"\"\n        this.description_of_business.value=\"\"\n        this.business_address.value=\"\"\n        \n        } catch (error){\n            console.log(error)\n        }\n        this.setState({addModalShow:true})\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    render() {\n        let addModalClose =() => this.setState({addModalShow:false})\n        return (\n            <div className=\"mt-5\">\n                <h3>\n                    Create Account\n                </h3>\n                <form \n                    onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">First Name</label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"first_name\" \n                            placeholder=\"First Name\"\n                            ref={(input) => {this.first_name = input}}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">Last Name</label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"last_name\" \n                            placeholder=\"Last Name\"\n                            ref = {(input) => {this.last_name = input}}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">Name of Business</label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"name_of_business\" \n                            placeholder=\"Name of Business\"\n                            ref ={(input) => {this.name_of_business = input}}\n                        />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">Business Email address</label>\n                        <input \n                            type=\"email\" \n                            className=\"form-control\" \n                            id=\"email_address\" \n                            placeholder=\"name@example.com\"\n                            ref={(input) => {this.email_address = input}}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlTextarea1\">Business Description</label>\n                        <textarea \n                                className=\"form-control\" \n                                id=\"description_of_business\" \n                                rows=\"3\"\n                                ref={(input) =>{this.description_of_business = input}}\n                                ></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">Businss address</label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"business_address\" \n                            placeholder=\"business address\"\n                            ref={(input) => {this.business_address = input}}\n                        />\n                    </div>\n                    <button type=\"submit\"  className=\"btn btn-primary\">Create An Account</button>\n                    </form>\n                    <SellerCreatedModal \n                        show={this.state.addModalShow}\n                        onHide={addModalClose}\n            /> \n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Modal,Button} from 'react-bootstrap';\n// import $ from 'jquery'\n\nimport User from './user.svg';\n\nexport default class SellerDetailModal extends Component {\n\n  // componentWillMount(){\n  //   this.calculateGP()\n  // }\n    constructor(props){\n        super(props)\n    }\n    render() {\n        return (\n          \n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n        More About  <small>{this.props.get_detail_farmer['1']} {this.props.get_detail_farmer['2']} </small>   \n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n          <center>\n                <img \n                className=\"img-responsive\" \n                src={User} \n                alt=\"website logo\" \n                width=\"300\" \n                height=\"200\"\n                />\n           <h3> {this.props.get_detail_farmer['1']} {this.props.get_detail_farmer['2']}</h3>\n          <h4> {this.props.get_detail_farmer['3']}</h4>\n          <h4>Wallet:</h4> {this.props.get_detail_farmer['7']}\n          \n        </center>\n        <hr  style={{\n            color: '#000000',\n            backgroundColor: '#000000',\n            height: .5,\n            borderColor : '#000000'\n        }} />\n        <h5>Description:</h5>\n        {this.props.get_detail_farmer['5']}\n      </Modal.Body>\n      \n      <Modal.Footer>\n        <Button onClick={this.props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport SellerDetailModal from './SingleSellerProfileModal';\n\nexport default class Sellers extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n            single_result:'',\n\t\t\taddModalShow: false\n\t\t}\t\n    }\n    async getSingleFarmer(uint_id){\n\t\tconst get_single_farmer = await this.props.productDapp.methods.getSingleSeller(uint_id).call()\n\t\treturn get_single_farmer\n\t}\n\n    render() {\n        let addModalClose =() => this.setState({addModalShow:false})\n        return (\n      <div>\n      <h2>Registered Farmers</h2>\n      <div className=\"table-responsive\">\n        <table className=\"table table-striped table-sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Name of Business</th>\n              <th>Business Address</th>\n              <th>Wallet Address</th>\n              <th>View Profile</th>\n              <th>Edit Profile</th>\n            </tr>\n          </thead>\n          <tbody>\n\n            {this.props.sellers.map((seller, key) => {\n                return(\n                    <tr key={key}>\n            <td>{seller.id}</td>\n              <td>{seller.first_name}</td>\n                <td>{seller.last_name}</td>\n                <td>{seller.name_of_business}</td>\n              <td>\n                {seller.business_address}\n              </td>\n              <td>\n                  {seller.seller_address}\n              </td>\n             <td>\n             <button id={seller.id}\n\t\t\t\t\t\tdata-target=\"#exampleModal\"\n\t\t\t\t\t\tonClick={async (event) => {\n\t\t\t\t\t\t\t// // const id = {result.id}\n\t\t\t\t\t\t\t// alert(`Hello World ${result.id}`)\n\t\t\t\t\t\t\t// this.getSingleResult()\n\t\t\t\t\t\t\tconst id= parseInt(event.target.id)\n\t\t\t\t\t\t\tconsole.log(typeof id)\n\t\t\t\t\t\t\tconst single_result = await  this.getSingleFarmer(id)\n\t\t\t\t\t\t\tthis.setState({single_result})\n\t\t\t\t\t\t\tthis.setState({addModalShow:true})\n\t\t\t\t\t\t\tevent.persist();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"btn btn-primary\">\n\t\t\t\t\t\tView \n\t\t\t\t\t</button>\n            </td>\n            <td>\n             <button id={seller.id}\n\t\t\t\t\t\tdata-target=\"#exampleModal\"\n\t\t\t\t\t\t// onClick={async (event) => {\n\t\t\t\t\t\t// \t// // const id = {result.id}\n\t\t\t\t\t\t// \t// alert(`Hello World ${result.id}`)\n\t\t\t\t\t\t// \t// this.getSingleResult()\n\t\t\t\t\t\t// \tconst id= parseInt(event.target.id)\n\t\t\t\t\t\t// \tconsole.log(typeof id)\n\t\t\t\t\t\t// \tconst single_result = await  this.getSingleFarmer(id)\n\t\t\t\t\t\t// \tthis.setState({single_result})\n\t\t\t\t\t\t// \tthis.setState({addModalShow:true})\n\t\t\t\t\t\t// \tevent.persist();\n\t\t\t\t\t\t// }}\n\t\t\t\t\t\tclassName=\"btn btn-success\">\n\t\t\t\t\t\tEdit \n\t\t\t\t\t</button>\n            </td>\n            \n            </tr>\n                );\n            })}  \n          </tbody>\n        </table>\n      </div>\n      <SellerDetailModal \n\t\t\t\tget_detail_farmer={this.state.single_result}\n\t\t\t\tshow={this.state.addModalShow}\n\t\t\t\tonHide={addModalClose}\n            /> \n      </div>\n        );\n    }\n}","// Basic React Imports \nimport React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport \"./dashboard_css.css\"\n\n// COMPONENTS\nimport Dashboard from './Dashboard';\nimport Seller from './Seller'\nimport Sellers from './Sellers'\nimport AddProduct from './AddProduct'\n\n\n// React Feather Icons\nimport { FilePlus ,Home,UserPlus  } from 'react-feather';\n\n// web3\nimport Web3 from 'web3';\n\n//abi\nimport ProductDapp from './abis/ProductDapp.json'\n\n\nexport default class App extends Component {\n  \n  // component will mount\n  async componentWillMount(){\n    await this.loadWeb3() \n    await this.loadBlockchainData()\n\n  }\n\n  async loadWeb3(){\n    window.addEventListener('load', async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n          window.web3 = new Web3(window.ethereum)\n          await window.ethereum.enable()\n          const web3 = window.web3\n          // // load accounts\n          const accounts = await web3.eth.getAccounts() // returns all the account in our wallet \n          console.log(accounts)\n\n          // console.log(\"Window Ethereum Enabled\")\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n          window.web3 = new Web3(window.web3.currentProvider);\n          \n      }\n      else {\n          alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\")\n          console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n  });\n  }\n\n  //load Blockchain Data\n  async loadBlockchainData(){\n    // console.log(ProductDapp)\n    window.web3 = new Web3(window.ethereum)\n    const web3 = window.web3\n    // // load accounts\n    const accounts = await web3.eth.getAccounts() // returns all the account in our wallet \n    this.setState({'account':accounts[0]})\n    // console.log(accounts)\n\n    // // detects the network dynamically \n    const networkId = await web3.eth.net.getId()\n\n    // // get network data\n    const networkData = ProductDapp.networks[networkId]\n    // console.log(\"Network Id:\",networkId)\n    // console.log(\"Network Data:\", networkData)\n\n    if(networkData){\n      const productDapp = new web3.eth.Contract(ProductDapp.abi, networkData.address) // loads the smart contract\n      // console.log(productDapp)\n      this.setState({productDapp}) // updates the state\n      // console.log(\"Contract:\", this.state.productDapp)\n      const productCount = await productDapp.methods.product_count().call() \n      const sellerCount = await productDapp.methods.seller_count().call()\n      this.setState({productCount})\n\n      const productDappName = await productDapp.methods.dapp_name().call()\n      this.setState({productDappName})\n\n      // console.log(\"Product Count:\", this.state.productCount)\n\n\n      // Load Seller\n      for(var j=1; j <= sellerCount; j++){\n        const seller = await productDapp.methods.sellers(j).call()\n        this.setState({\n          sellers:[...this.state.sellers, seller]\n        })\n      }\n\n      // Load Product\n      for(var i=1; i <= productCount; i++){\n        const product = await productDapp.methods.products(i).call()\n        this.setState({\n          products:[...this.state.products, product]\n        })\n      }\n\n\n    //   this.setState({loading:false})\n\n    //   //logging out\n    //   console.log(marketplace)\n    //   console.log(\"Network Id:\", networkId)\n    //   console.log(\"Contract Address:\", networkData.address)\n    //   console.log(\"Available Products on the blockchain: \", this.state.products)\n    }\n    else {\n      window.alert(\"Marketplace contract is not deployed to the network\")\n    }\n  }\n \nconstructor(props){\n  super(props)\n  this.state={\n    account:'',\n    message:'',\n    products:[],\n    sellers:[],\n    loading:true\n  }\n}\n\n\n  render() {\n    return (\n      <Router>\n      <div>\n        {/* Nav Bar */}\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"#\">\n            {this.state.productDappName}\n          </a>\n          <input \n              className=\"form-control form-control-dark w-100\" \n              type=\"text\" \n              placeholder=\"Search\" \n              aria-label=\"Search\"\n              />\n          <ul className=\"navbar-nav px-3\">\n            {/* <li className=\"nav-item text-nowrap\">\n              <a className=\"nav-link\" href=\"#\">Sign out</a>\n            </li> */}\n          </ul>\n        </nav>\n\n        <div className=\"container-fluid\">\n             <div className=\"row\">\n                <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">                    \n                  <div className=\"sidebar-sticky\">\n                      <ul className=\"nav flex-column\">\n                        {/* Home Link */}\n                      <li className=\"nav-item\">\n                          <Link className=\"nav-link active\" to=\"/\">\n                          <span className=\"mr-2\">\n                              <Home \n                              size='20' \n                              // color={getRandomColor()} \n                              />\n                          </span>\n                          Products <span className=\"sr-only\">(current)</span>\n                          </Link>\n                      </li>\n                      {/* Seller Link */}\n                      <li className=\"nav-item\">\n                          <Link className=\"nav-link\" to=\"/seller\">\n                          <span className=\"mr-2\">\n                              <UserPlus \n                                  size='20' \n                              />                  \n                          </span>\n                          Be A Seller\n                          </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                          <Link className=\"nav-link\" to=\"/sellers\">\n                          <span className=\"mr-2\">\n                              <UserPlus \n                                  size='20' \n                              />                  \n                          </span>\n                          Farmers\n                          </Link>\n                      </li>\n                      \n                      {/* Add A Product Link */}\n                      <li className=\"nav-item\">\n                          <Link className=\"nav-link\" to=\"/product/add\">\n                          <span className=\"mr-2\">\n                              \n                          <FilePlus \n                                size='20' \n                              />            \n                          </span>\n                          Add A Product\n                          </Link>\n                      </li>\n                      </ul>\n                  </div>\n                  </nav>\n                  <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n                    <Switch>\n                          <Route path=\"/seller\">\n                              <Seller \n                                loading={this.state.loading}\n                                productDapp={this.state.productDapp}\n                                message ={this.state.message}\n                                account={this.state.account}\n                              />\n                          </Route>\n                          <Route path=\"/sellers\">\n                              <Sellers \n                              sellers={this.state.sellers}\n                              productDapp={this.state.productDapp}\n                              />\n                          </Route>\n                          \n                          <Route path=\"/product/add\">\n                              <AddProduct \n                                    loading={this.state.loading}\n                                    productDapp={this.state.productDapp}\n                                    message ={this.state.message}\n                                    account={this.state.account}\n                              />\n                          </Route>\n                    \n                          \n                          <Route path=\"/\">\n                              <Dashboard \n                              productDapp={this.state.productDapp}\n                              products={this.state.products}\n                              message ={this.state.message}\n                              account={this.state.account}\n                              />\n                          </Route>\n\n\n                  </Switch>\n                  </main>\n            </div>\n        </div>\n    </div>  \n    </Router>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}